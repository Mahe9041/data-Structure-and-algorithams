/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int c = 0;
        ListNode* t1 = l1;
        ListNode* t2 = l2;
        ListNode* prev = nullptr;
        while(t1 && t2){
            int sum = t1-> val + t2 ->val + c;
            int res = sum % 10;
            t1 -> val = res;
            c = sum/10;
            prev = t1;
            t1 = t1-> next;
            t2 = t2-> next;
        }

        if (t2) {
            prev->next = t2; 
            t1 = t2;         
        }

        while (t1) {
            int sum = t1->val + c;
            t1->val = sum % 10;
            c = sum / 10;
            prev = t1;
            t1 = t1->next;
        }
        if (c > 0) {
            prev->next = new ListNode(c);
        }
        return l1;

    }
};
